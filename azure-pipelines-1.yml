# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - main
pr: none     

pool:
  vmImage: 'windows-latest'
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
- stage: API
  jobs:
  - job: apijob
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloudToken'
        organization: 'p2project-1'
        scannerMode: 'MSBuild'
        projectKey: 'P2Project_P2'
        projectName: 'P2'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
        workingDirectory: 'P2Pokeloot/P2Project/P2Main'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/coburtura/coverage.xml'

    - task: SonarCloudAnalyze@1

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(solution)'
        zipAfterPublish: true
        arguments:

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'P2(6b99bb29-57fd-4673-b918-0d515335b837)'
        appType: 'apiApp'
        WebAppName: 'PokeLoot'
        deployToSlotOrASE: true
        ResourceGroupName: 'PokeLoot'
        SlotName: 'production'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
